



"""
Django settings for lotteh project.

Generated by 'django-admin startproject' using Django 4.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
import json

# Open and load config
with open('/etc/config.json') as config_file:
    config = json.load(config_file)

with open('/etc/apis.json') as config_file:
    keys = json.load(config_file)

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'sulottehir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config['SECRET_KEY']

# SECURITY WARNING: do not run with debug turned on in production!
DEBUG = False

# Site config
SITE_NAME = 'Lotte Harper'
PROTOCOL = 'https'
DOMAIN = 'lotteh.com'
SITE_ID = 1
BASE_URL = PROTOCOL + '://' + DOMAIN

# Static site
STATIC_DOMAIN = 'glamgirlx.com'
ADD_DOMAIN = 'qoshlli.com'
OLD_DOMAIN = 'femmebabe.com'

ADD_URL = PROTOCOL + '://' + ADD_DOMAIN

ALLOWED_HOSTS = [DOMAIN, STATIC_DOMAIN, ADD_DOMAIN, OLD_DOMAIN, '172.234.244.64', '2600:3c0a::f03c:95ff:feda:ca7a']

INTERNAL_IPS = [
    '127.0.0.1',
    '172.234.244.64',
    '2600:3c0a::f03c:95ff:feda:ca7a'
]

# Application definition
INSTALLED_APPS = [
    'daphne',
    'simple_history',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'landing',
    'users',
    'crispy_forms',
    'crispy_bootstrap4',
    'django_recaptcha',
    'vendors',
    'vibe',
    'verify',
    'feed',
    'misc',
    'security',
    'errors',
    'live',
    'chat',
    'go',
    'birthcontrol',
    'recordings',
    'interactive',
    'voice',
    'sms',
    'face',
    'kick',
    'audio',
    'stacktrace',
    'tts',
    'payments',
    'recovery',
    'barcode',
    'jsignature',
    'shell',
    'hypnosis',
    'photobooth',
    'address',
#    'hot',
    'survey',
#    'mfa',
#    'pwa_webpush',
    'webpush',
    'notifications',
    'storages',
    'synthesizer',
    'channels',
    'crypto',
    'app',
    'melanin',
    'remote',
    'retargeting',
    'django_summernote',
    'mail',
    'translate',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'games',
#    'debug_toolbar',
    'webauth',
    'contact',
    'web',
    'meet',
    'django_extensions',
    'desktop',
#    '',
]

# Auth backends
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]


# Middleware goes between a URL pattern and a view
MIDDLEWARE = [
#    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'users.middleware.simple_middleware',
    'security.middleware.security_middleware',
    'users.middleware.CurrentUserMiddleware',
    'feed.middleware.CurrentUserMiddleware',
    'feed.middleware.CurrentRequestMiddleware',
    'feed.middleware.ExceptionVerboseMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
#    '',
]

#SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'
#SESSION_COOKIE_NAME = "user_session"
#SESSION_COOKIE_HTTPONLY = True
#SESSION_SAVE_EVERY_REQUEST = True
#SESSION_EXPIRE_AT_BROWSER_CLOSE = True

ROOT_URLCONF = 'lotteh.urls'

# Templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'feed.context_processors.feed_context',
                'live.context_processors.live_context',
                'audio.context_processors.audio_context',
            ],
            'libraries':{
                'filters': 'templates.tags.filters',
                'feed_filters': 'feed.templatetags.app_filters',
                'shell_filters': 'shell.templatetags.shell_filters',
            },
        },
    },
]

# The default application
WSGI_APPLICATION = 'lotteh.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'database',
        'USER': 'django',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '',
#        'OPTIONS': {
#            'timeout': 180,
#        }
#        'DISABLE_SERVER_SIDE_CURSORS': True,
    },
    'lotteh2024': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'lotteh2024',
        'USER': 'django',
        'PASSWORD': 'password',
        'HOST': 'localhost',
        'PORT': '',
#        'OPTIONS': {
#            'timeout': 180,
#        }
#        'DISABLE_SERVER_SIDE_CURSORS': True,
    }
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': BASE_DIR / 'db.sqlite3',
#        'OPTIONS': {
#            'timeout': 180,
#        }
#    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Cacheing
CACHES = {
    "default": {
#        "BACKEND": "django.core.cache.backends.redis.RedisCache",
#        "LOCATION": "redis://localhost:6379",
        "BACKEND": "django.core.cache.backends.filebased.FileBasedCache",
        "LOCATION": str(os.path.join(BASE_DIR, 'cache/')),
    }
}

CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOWED_ORIGINS = [
    "https://{}".format(STATIC_DOMAIN),
    "https://{}".format(ADD_DOMAIN),
]

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Los_Angeles'

USE_I18N = True

USE_TZ = True

# Language for translation
DEFAULT_LANG = 'en'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Login URL config
LOGIN_REDIRECT_URL = 'app:app'
LOGIN_REDIRECT_QUERYSTRING = '?p=1'
LOGIN_URL = 'users:login'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Crispy forms config
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

MAIL_NAME = 'lotteh.com'

EMAIL_HOST = DOMAIN
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_ADDRESS = 'team@{}'.format(MAIL_NAME)
EMAIL_HOST_USER = 'team' #'Love@MamaSheen.com'
EMAIL_HOST_PASSWORD = config['EMAIL_HOST_PASSWORD']
DEFAULT_FROM_EMAIL = '{} <{}>'.format(SITE_NAME, EMAIL_ADDRESS)

# Upload settings
DATA_UPLOAD_MAX_MEMORY_SIZE = 1000000000
DATA_UPLOAD_MAX_NUMBER_FIELDS = 1000

# Login settings
SESSION_EXPIRE_SECONDS = 60*60*24*3
SESSION_COOKIE_AGE = SESSION_EXPIRE_SECONDS
LOGIN_VALID_MINUTES = SESSION_EXPIRE_SECONDS/60

# Auth and cookies
VERIFY_AGE_EXPIRATION_HOURS = 3
VERIFY_UNAX_EXPIRATION_HOURS = 24 * 2
PUSH_COOKIE_EXPIRATION_HOURS = 24 * 7
LANDING_COOKIE_EXPIRATION_DAYS = 30 * 3

# CELERY STUFF
BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'America/Los_Angeles'

# Monero mining
ACTIVATE_MINING = False
MONERO_ADDRESS = config['MONERO_ADDRESS']

# Programmanble SMS keys
TWILIO_ACCOUNT_SID = keys['TWILIO_ACCOUNT_SID']
TWILIO_AUTH_TOKEN = keys['TWILIO_AUTH_TOKEN']

# Moderation keys
SIGHTENGINE_USER = keys['SIGHTENGINE_USER']
SIGHTENGINE_SECRET = keys['SIGHTENGINE_SECRET']

FRAUDGUARD_USER = keys['FRAUDGUARD_USER']
FRAUDGUARD_SECRET = keys['FRAUDGUARD_SECRET']

ANTIDEO_KEY = keys['ANTIDEO_KEY']

IDSCAN_AUTH_KEY = keys['IDSCAN_AUTH_KEY']

# Maps key
GOOGLE_API_KEY = keys['GOOGLE_MAPS_API_KEY']

# Payment processing keys
OPENNODE_KEY = keys['OPENNODE_KEY']

NOWPAYMENTS_KEY = keys['NOWPAYMENTS_KEY']
NOWPAYMENTS_EMAIL = keys['NOWPAYMENTS_EMAIL']
NOWPAYMENTS_PASSWORD = keys['NOWPAYMENTS_PASSWORD']

ANET_KEY = keys['ANET_KEY']
ANET_NAME = keys['ANET_NAME']

# Hosting keys
TENSORDOCK_KEY = keys['TENSORDOCK_KEY']
TENSORDOCK_TOKEN = keys['TENSORDOCK_TOKEN']
TENSORDOCK_SERVER = keys['TENSORDOCK_SERVER']

# AES Keys for internal encryption
AES_KEY = keys['AES_KEY']
PRV_AES_KEY = keys['PRV_AES_KEY']
PUB_AES_KEY = keys['PUB_AES_KEY']
REL_AES_KEY = keys['REL_AES_KEY']

# AWS s3 Bucket keys
AWS_ACCESS_KEY_ID = keys['AWS_ACCESS']
AWS_SECRET_ACCESS_KEY = keys['AWS_SECRET']
AWS_QUERYSTRING_EXPIRE = 60*60*24*7

# Tensorfusion API key
TF_API_KEY = keys['TF_API_KEY']

# Geolocation API key
GEOLOCATION_API_KEY = keys['GEOLOCATION_API_KEY']

# Twitter Keys
TWITTER_KEY = keys['TWITTER_KEY']
TWITTER_SECRET = keys['TWITTER_SECRET']
TWITTER_ACCESS_TOKEN = keys['TWITTER_ACCESS_TOKEN']
TWITTER_TOKEN_SECRET = keys['TWITTER_TOKEN_SECRET']

# Google recaptcha keys
RECAPTCHA_PUBLIC_KEY = config['RECAPTCHA_PUBLIC_KEY']
RECAPTCHA_PRIVATE_KEY = config['RECAPTCHA_PRIVATE_KEY']

# Stripe keys
STRIPE_API_KEY = config['STRIPE_KEY']
STRIPE_PUBLIC_KEY = config['STRIPE_PUBLIC_KEY']

# Square keys
SQUARE_APP_ID = config['SQUARE_APP_ID']
SQUARE_ACCESS_TOKEN = config['SQUARE_ACCESS_TOKEN']

# Cloudinary keys (not in use)
CLOUDINARY_CLOUD_NAME = config['CLOUDINARY_CLOUD_NAME']
CLOUDINARY_API_KEY = config['CLOUDINARY_API_KEY']
CLOUDINARY_API_SECRET = config['CLOUDINARY_API_SECRET']

# TOTP Key
OTP_SECRET_CODE = config['OTP_SECRET_CODE']

# Paypal keys
PAYPAL_ID = config['PAYPAL_ID']
PAYPAL_SECRET = config['PAYPAL_SECRET']

# Location for Square
SQUARE_LOCATION = config['SQUARE_LOCATION']

# Crypto wallets
BITCOIN_WALLET = config['BITCOIN_WALLET']
ETHEREUM_WALLET = config['ETHEREUM_WALLET']

# Vivokey cryptobionics JWT API key
VIVOKEY_KEY = config['VIVOKEY_KEY']

# Image host key
IMAGE_HOST_KEY = keys['IMAGE_HOST_KEY']

# OpenAI key for GPT
OPENAI_KEY = keys['OPENAI_KEY']

# Helcim key
HELCIM_KEY = keys['HELCIM_KEY']

# Imgur keys
IMGUR_ID = keys['IMGUR_ID']
IMGUR_SECRET = keys['IMGUR_SECRET']

# Message storage dedup middleware
MESSAGE_STORAGE = 'lotteh.message_storage.SessionDedupStorage'

# Django MFA config
#from django.conf.global_settings import PASSWORD_HASHERS as DEFAULT_PASSWORD_HASHERS #Preferably at the same place where you import your other modules
MFA_UNALLOWED_METHODS=()   # Methods that shouldnt be allowed for the user e.g ('TOTP','U2F',)
MFA_LOGIN_CALLBACK=""      # A function that should be called by username to login the user in session
MFA_RECHECK=True           # Allow random rechecking of the user
MFA_REDIRECT_AFTER_REGISTRATION="users:login"   # Allows Changing the page after successful registeration
MFA_SUCCESS_REGISTRATION_MSG = "Please log in again to continue." # The text of the link
MFA_RECHECK_MIN=10         # Minimum interval in seconds
MFA_RECHECK_MAX=30         # Maximum in seconds
MFA_QUICKLOGIN=True        # Allow quick login for returning users by provide only their 2FA
MFA_ALWAYS_GO_TO_LAST_METHOD = False # Always redirect the user to the last method used to save a click (Added in 2.6.0).
MFA_RENAME_METHODS={} #Rename the methods in a more user-friendly way e.g {"RECOVERY":"Backup Codes"} (Added in 2.6.0)
MFA_HIDE_DISABLE=False
#('FIDO2',)     # Can the user disable his key (Added in 1.2.0).
MFA_OWNED_BY_ENTERPRISE = False  # Who owns security key
#PASSWORD_HASHERS = DEFAULT_PASSWORD_HASHERS # Comment if PASSWORD_HASHER already set in your settings.py
#PASSWORD_HASHERS += ['mfa.recovery.Hash']
RECOVERY_ITERATION = 350000 #Number of iteration for recovery code, higher is more secure, but uses more resources for generation and check...
TOKEN_ISSUER_NAME=SITE_NAME      #TOTP Issuer name
U2F_APPID=BASE_URL    #URL For U2F
FIDO_SERVER_ID=DOMAIN      # Server rp id for FIDO2, it is the full domain of your project
FIDO_SERVER_NAME=SITE_NAME

# Site descriotionn
BASE_DESCRIPTION = 'Professional entertainment, photos, videos, audio, livestreaming and casual gameplay, as well as ID scanning, web development and surrogacy services.'

# Icon for navbar and media
ICON_URL = '/media/static/logo.png'
PWA_ICON_URL = '/media/static/lotteh.png'

# PWA config
PWA_APP_NAME = SITE_NAME
PWA_APP_DESCRIPTION = BASE_DESCRIPTION
PWA_APP_THEME_COLOR = '#c93443'
PWA_APP_BACKGROUND_COLOR = '#b31717'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = '/',
PWA_APP_ORIENTATION = 'any'
PWA_APP_START_URL = '/'
PWA_APP_ICONS = [
    {
        'src': '/media/static/android-chrome-192x192.png',
        'sizes': '192x192'
    }
]
PWA_APP_DIR = 'ltr'
PWA_APP_LANG = 'en-US'

# Webpush settings
WEBPUSH_SETTINGS = {
    "VAPID_PUBLIC_KEY": keys['VAPID_PUBLIC_KEY'],
    "VAPID_PRIVATE_KEY": keys['VAPID_PRIVATE_KEY'],
    "VAPID_ADMIN_EMAIL": "jasper.camber.holton@gmail.com"
}

PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'templates', 'serviceworker.js')
ASGI_APPLICATION = "lotteh.routing.application" #routing.py will be created later
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': "channels.layers.InMemoryChannelLayer"
    }
}

# Websocket retry time
RELOAD_TIME = 10000

# Secure file storage
REMOVE_SECURE_TIMEOUT_SECONDS = 600
REMOVE_SECURE_STILL_TIMEOUT_SECONDS = 600
REMOVE_SECURE_TIMEOUT_VIDEO_SECONDS = 600
REMOVE_SECURE_TIMEOUT_FILE_SECONDS = 600 * 10
REMOVE_SECURE_BLUR_TIMEOUT_SECONDS = 600

# URL length
SECURE_MEDIA_CODE_LENGTH = 230

# Required verififcation
MELANIN_VERIFICATION_MINUTES = 5

# Multi factor auth settings
FACE_VALID_MINUTES = 5
AUTH_VALID_MINUTES = 5
ENFORCE_TFA = True
MFA_TOKEN_LENGTH = 8
MFA_TOKEN_ATTEMPTS = 10

# Minimum age
MIN_AGE = 13 # For signup
MIN_AGE_ADULT = 18 # For adult content
MIN_AGE_VERIFIED = 21 # For surrogacy


# User subscription presenntation settings
WEBPUSH_QUERY_DELAY_SECONDS = 60 * 2
EMAIL_QUERY_DELAY_SECONDS = 60 * 3

# Crypto currencies accepted/settings
CRYPTO_PROVIDER = 'https://bitpay.com/buy-crypto/'
DEFAULT_CRYPTO = 'ETH'
MIN_BITCOIN_PERCENTAGE = 0.90
BITCOIN_DECIMALS = 8

# Free settings
FREE_POSTS = 210
PAID_POSTS = 12
PAID_POSTS_SELECTION = 45

# End user ecurity settings
IPS_BEFORE_VERIFY = 100
ID_VERIFICATION_EXPIRES_DAYS = 30 * 3
PAGE_LOADS_PER_API_CALL = 20
CONTENT_RISK_ASSESS_TIMEOUT = 60 * 5
REDIRECT_URL = 'https://glamgirlx.com/'

# SMS settings
PHONE_NUMBER = '+12063394443' #'+19705857901'

# AFR settings
FACE_LIVENESS_ZERO_TO_ONE = 0.1
FACE_PASSING_SCORE = 20/100.0
ID_FACE_PASSING_SCORE = 10/100.0

# 60 seconds * 60 minutes * 24 hours * X days
ID_VERIFICATION_COUNTDOWN = 60 * 60 * 24 * 3
MINUTES_PER_IDSCAN = 30
MINUTES_PER_IDSCAN_STAFF = 3

# Security app and auth settings
VERIFICATION_MRZ_LENGTH = 8
VERIFICATION_OCR_LENGTH = 16
VERIFICATION_NFC_LENGTH = 456
MRZ_SCAN_REQUIRED_MINUTES = 60 * 2
NFC_SCAN_REQUIRED_MINUTES = 60 * 24
VIVOKEY_SCAN_REQUIRED_MINUTES = 60 * 10
PIN_REQUIRED_MINUTES = 60 * 24
OTP_REQUIRED_MINUTES = 60 * 24
BIOMETRIC_REQUIRED_MINUTES = 60 * 24
RECENT_FACE_MATCH_REQUIRED_MINUTES = 20

# Recovery settings
RECOVERY_TOKEN_LENGTH = 32

# Signature settings
JSIGNATURE_WIDTH = 250
JSIGNATURE_HEIGHT = 100

# Live video/audio settings
AUDIO_LIVE_INTERVAL = 1000 * 60 * 3
PITCHES_PER_SECOND = 8
TARGET_PITCH = 'G3'
MAX_PITCH = 1200
LIVE_INTERVAL = 1000 * 5
RECORDING_LENGTH_SECONDS = 60 * 30
CAMERA_KEY_LENGTH = 64

# recordings with a * in the name expire after this many days
RECORDING_EXPIRY_DAYS = 30
CV2_MSE_DIV = 1 # WIDTH / DIV = MSE (10)  1920 / 192 = 10
DEFAULT_SAFETY_SCALE = 0.3

# Important user ids
ADMIN_ID = 1
MY_ID = 2
MODERATOR_USER_ID = 3

# New account throttle
NEW_USERS_PER_DAY = 99

# Photo upload config
MAX_IMAGE_DIMENSION = 3000 * 4
MAX_RED_IMAGE_DIMENSION = 1500
THUMB_IMAGE_DIMENSION = 300

# Live config
LIVE_SHOW_LENGTH_MINUTES = 30
LIVE_SCHEDULE_BEGINS = 14
LIVE_SCHEDULE_HOURS = 8
SHOWS_PER_USER_WEEK = 3
SHOWS_PER_MODEL_WEEK = 9
SHOW_BOOK_OUT_MINUTES = 60 * 5

# line seperated, these are the sample texts for photo upload
STATUS_SAMPLE = 3457

# Large private text on modals
PRIVATE_TEXT_LARGE = False

# the threshold balance before the server powers off to save money (GPU hosting only)
SERVER_SHUTDOWN_THRESHOLD = 25
SERVER_COST_MINUTE = 0.40

# Limit logins without facial recognition to one session
LIMIT_BYPASS_LOGIN = False

# Summernote Config
SUMMERNOTE_THEME = 'bs5'
SUMMERNOTE_CONFIG = {
    'summernote': {
        'width': '100%',
    },
}
TEXTAREA_ROWS = 7
EMAIL_PER_PAGE = 20

# Turn ads on
SHOW_ADS = True
SHOW_WISHLIST = True

# Payments config
PAYMENT_PROCESSOR = 'square'

# Stripe config
CURRENCY = "USD"
PRICE_CHOICES = 24
PHOTO_CHOICES = 24

# Surrogacy settings
APPLICATION_FEE = 15
APPLICATION_FEE_SURROGACY = 10000
APPLICATION_FEE_PHOTO = 1
SURROGACY_FEE = 80000

# Filter nudity
NUDITY_FILTER = True
NUDITY_FILTER_SECONDS = 2

# Bash config
BASH_USER = 'team'
BASH_PASS = BASH_USER

# Syntax highlighting
USE_PRISM = True

# the text on the main screen
SPLASH = 280

# Default feed name
DEFAULT_FEED = 'private'

# Path to line seperated embeddable ads
#ADS_PATH = 'misc/ads.txt'

GOOGLE_CLIENT_ID = keys['OAUTH_GOOGLE_CLIENT_ID'],
GOOGLE_CLIENT_SECRET = keys['OAUTH_GOOGLE_SECRET'],

# oAuth config
SOCIALACCOUNT_LOGIN_ON_GET=True
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': keys['OAUTH_GOOGLE_CLIENT_ID'],
            'secret': keys['OAUTH_GOOGLE_SECRET'],
        },
        'SCOPE': [
            'email',
            'https://www.googleapis.com/auth/youtube',
            'https://www.googleapis.com/auth/youtube.force-ssl',
            'https://www.googleapis.com/auth/youtube.upload'
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}
ACCOUNT_DEFAULT_HTTP_PROTOCOL='https'
SESSION_COOKIE_DOMAIN = DOMAIN
USE_ALLAUTH = False

# Company/Agent info
UBI = '604-691-289'
COMPANY_NAME = 'Charlotte Grace Harper'
AUTHOR_NAME = 'Charlotte Grace Harper'
CITY_STATE = 'Seattle, Washington'
ADDRESS = '1438 NW 60th St Apt 102, Seattle, WA 98107-2997, USA'
AGENT_NAME = 'Dr. Charlotte Harper, PhD'
AGENT_PHONE = '+1 (425) 535-8727'
BUSINESS_TYPE = 'sole proprietorship'

# Free Trial
DEFAULT_MODEL_TRIAL_DAYS = str(30)
IDSCAN_TRIAL_DAYS = 3

# Reader
POST_READER_LENGTH = 10000

# Default app page
DEFAULT_PAGE = 2

# Fertility clinic name
FERTILITY_CLINIC = 'Pacific Northwest Fertility'

# Color options
BACKGROUND_COLOR = "#EBF9FF"
BACKGROUND_COLOR_DARK = "#343A40"
# Email color
HEADER_COLOR = "#54D1F0"
FOOTER_COLOR = "#54D1F0"

# Webauth settings
WEBAUTH_RP_ID = DOMAIN
WEBAUTH_RP_NAME = SITE_NAME
WEBAUTH_ORIGIN = BASE_URL
WEBAUTH_VERIFY_URL = "/webauth/verify/"

# Contact settings
TYPICAL_RESPONSE_TIME_HOURS = 12

# Social URLs
SHOW_SOCIAL_LINKS = True
RESUME_URL = 'https://docs.google.com/document/d/1MIeT0hJl3Hpbr5oX9wfUskBMzAwV3_NS6DJCKvaXNXo/edit?usp=sharing'
GITHUB_URL = 'https://github.com/daisycamber'
LINKEDIN_URL = 'https://www.linkedin.com/in/charlotte-grace-harper/'
INSTAGRAM_LINK = 'https://instagram.com/yourlocalfemme'
TWITTER_LINK = 'https://twitter.com/teamfemmebabe'
YOUTUBE_LINK = 'https://youtube.com/@daisymakeup'

# Static site
STATIC_SITE_URL = 'https://' + STATIC_DOMAIN
STATIC_SITE_NAME = 'Glam Girl X'

# Session to deliver
SESSION_INDEX = 2

# Audio fingerprinting
AUDIO_FINGERPRINT_FIDELITY = 1000

# Game codes
GAME_CODE_LENGTH = 4

# Coupon code for NFC tag
COUPON_CODE = 'CHIPPED69'

# Filter sessions by this many days
SESSION_FILTER_DAYS = 30

# Interval at which to upload posts
UPLOAD_INTERVAL = 4000

# ID Scanner
MIN_CONFIDENCE = 90
BANNED_ID_TYPES = ['SexOffenderCard']
ENABLE_AGECHECKER = False
USE_IDWARE = True
BARCODE_SIZE = 300
REQUIRE_SUBJECTION = True
OCR_LANG = 'eng'

# Interval to assess kick
ASSESS_KICK_INTERVAL = 60 * 30

# Number of words to add to post for unique naming
POST_WORDS = 3

# Audio sample length in ms
FREE_AUDIO_MS = 10000

# Auction settings
AUCTION_END_DAYS=0
MIN_BID = 10

# Remove duplicate content
REMOVE_DUPLICATES = True

# Bank/processing statement descriptor
STATEMENT_DESCRIPTOR = 'LOTTEH.COM'

# Icon URL for email
EMAIL_ICON_URL = '/em6ail/static/logo.png'

# Session update query interval
SESSION_UPDATE_SECONDS = 5

# Minimum crypto payment percentage
MIN_CRYPTO_PERCENTAGE = 90

# Programmable voice blog feed
VOICE_FEED = 'blog'

# Offsite images (eg. imgur)
USE_OFFSITE = True

# Id scan is valid for (hours)
ID_VALID_HOURS = 24 * 30 * 6
# Signature valid for
SIG_VALID_HOURS = 24 * 30 * 6

# Multiple sales of one product
ALLOW_MULTIPLE_SALES = False

# Vibration settings
DEFAULT_VIBRATION = 400

# Adult content allowed?
ADULT_CONTENT = True

# Blur nude parts of image only? (vs full photo)
BLUR_ONLY_NUDE = True
# Liberally?
BLUR_ALL_NUDE = False

# Search in your language?
MULTILINGUAL_SEARCH = True

# Text for the site ad
AD_TEXT = 'Charlotte Harper is a full stack developer living in {}. I use she/her pronouns and build internet enabled software, including apps, games, devices, and other software. This website is a secure Kubernetes at the edge solution where you can visit me and see what I\'m building. Thank you for visiting my webapp.'.format(CITY_STATE)

# Sentry
import sentry_sdk
sentry_sdk.init(
    dsn="https://c321f4368422e514f39fcb2b07ba8ffc@o4506803873447936.ingest.sentry.io/4506803875282944",
    # Set traces_sample_rate to 1.0 to capture 100%
    # of transactions for performance monitoring.
    traces_sample_rate=1.0,
    # Set profiles_sample_rate to 1.0 to profile 100%
    # of sampled transactions.
    # We recommend adjusting this value in production.
    profiles_sample_rate=0.5,
)
