#!/bin/bash
USER="team"
DIR="lotteh"
THENAME="lotteh2024"
NEWNAME="database"
TEMPNAME="femmebabe"
echo "Postgres setup"
cd /home/$USER/$DIR
source venv/bin/activate
SEDSTRING1="s@{THENAME}@${TEMPNAME}@g"
SEDSTRING2="s@{NEWNAME}@${THENAME}@g"
SEDSTRING3="s@{TEMPNAME}@${NEWNAME}@g"
sudo -u postgres psql -U postgres -c $"DROP DATABASE $THENAME WITH (FORCE);"
sudo -u postgres psql -U postgres -c $"CREATE DATABASE $NEWNAME;"
sudo -u postgres psql -U postgres -c "CREATE USER django WITH PASSWORD 'password';"
sudo -u postgres psql -U postgres -c "ALTER ROLE django SET client_encoding TO 'utf8';"
sudo -u postgres psql -U postgres -c "ALTER ROLE django SET default_transaction_isolation TO 'read committed';"
sudo -u postgres psql -U postgres -c "ALTER ROLE django SET timezone TO 'UTC';"
sudo -u postgres psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE lotteh2024 TO django;"
sudo -u postgres psql -U postgres -c "GRANT ALL ON SCHEMA public TO django;"
sudo -u postgres psql -U postgres -c "ALTER DATABASE lotteh2024 OWNER TO django;"
python manage.py migrate --run-syncdb --database $THENAME
echo "Loading data, this may take a while"
python manage.py loaddata dbfix.json --database $THENAME
python patch_database.py
#python manage.py dumpdata --exclude auth.permission --exclude contenttypes --database $OLDNAME > db2.json
#python manage.py loaddata db2.json --database $NEWNAME
#sed -i $SEDSTRING1 $"/home/$USER/$DIR/$DIR/settings.py"
#sed -i $SEDSTRING2 $"/home/$USER/$DIR/$DIR/settings.py"
#sed -i $SEDSTRING3 $"/home/$USER/$DIR/$DIR/settings.py"
#sed -i $SEDSTRING1 $"/home/$USER/$DIR/scripts/pgsetupfix"
#sed -i $SEDSTRING2 $"/home/$USER/$DIR/scripts/pgsetupfix"
#sed -i $SEDSTRING3 $"/home/$USER/$DIR/scripts/pgsetupfix"
#sudo -u postgres psql -U postgres -c "DROP DATABASE database WITH (FORCE);"
